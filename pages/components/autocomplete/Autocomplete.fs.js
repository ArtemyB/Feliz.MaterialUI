import{Union,Record}from"../../../../src/fable_modules/fable-library.3.7.18/Types.js";import{union_type,option_type,list_type,record_type,string_type,class_type}from"../../../../src/fable_modules/fable-library.3.7.18/Reflection.js";import{tryPick,tryFind,toArray,ofArray,map}from"../../../../src/fable_modules/fable-library.3.7.18/List.js";import{newGuid}from"../../../../src/fable_modules/fable-library.3.7.18/Guid.js";import{printf,toText}from"../../../../src/fable_modules/fable-library.3.7.18/String.js";import{useFeliz_React__React_useElmish_Static_Z151674B}from"../../../../src/fable_modules/Feliz.UseElmish.1.6.0/UseElmish.fs.js";import{ProgramModule_mkSimple}from"../../../../src/fable_modules/Fable.Elmish.4.0.0-beta-3/program.fs.js";import{MuiHelpers_createElement}from"../../../../../src/Feliz.MaterialUI/./Mui.fs.js";import{Typography,TextField,Autocomplete as Autocomplete_1}from"@mui/material";import{singleton,append,delay,toList}from"../../../../src/fable_modules/fable-library.3.7.18/Seq.js";import{Browser_Types_Event__Event_get_Value}from"../../../../../src/Feliz.MaterialUI/../../docs-app/src/fable_modules/Fable.React.8.0.1/Fable.React.Extensions.fs.js";import{defaultArg,bind}from"../../../../src/fable_modules/fable-library.3.7.18/Option.js";import{Interop_reactApi}from"../../../../src/fable_modules/Feliz.1.68.0/./Interop.fs.js";import{createElement}from"react";export class Country extends Record{constructor(e,t,r){super(),this.Id=e,this.Name=t,this.Description=r}}export function Country$reflection(){return record_type("Samples.Components.Autocomplete.Autocomplete.Country",[],Country,(()=>[["Id",class_type("System.Guid")],["Name",string_type],["Description",string_type]]))}export class Model extends Record{constructor(e,t,r){super(),this.Countries=e,this.MyText=t,this.LastSelected=r}}export function Model$reflection(){return record_type("Samples.Components.Autocomplete.Autocomplete.Model",[],Model,(()=>[["Countries",list_type(Country$reflection())],["MyText",string_type],["LastSelected",option_type(class_type("System.Guid"))]]))}export class Msg extends Union{constructor(e,...t){super(),this.tag=0|e,this.fields=t}cases(){return["SetText","Select"]}}export function Msg$reflection(){return union_type("Samples.Components.Autocomplete.Autocomplete.Msg",[],Msg,(()=>[[["Item",string_type]],[["Item",option_type(class_type("System.Guid"))]]]))}export const init=new Model(map((e=>new Country(newGuid(),e,toText(printf("Description of %s"))(e))),ofArray(["Afghanistan","Aland Islands","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan"])),"",void 0);export function update(e,t){return 1===e.tag?new Model(t.Countries,t.MyText,e.fields[0]):new Model(t.Countries,e.fields[0],t.LastSelected)}export function Autocomplete(e){let t,r;const o=useFeliz_React__React_useElmish_Static_Z151674B((()=>ProgramModule_mkSimple((()=>init),update,((e,t)=>{}))),[e.$key]),s=o[0],i=o[1],l=ofArray([MuiHelpers_createElement(Autocomplete_1,[(t=toArray(s.Countries),["options",Array.from(t)]),["getOptionLabel",e=>e.Name],["freeSolo",!0],["renderInput",e=>MuiHelpers_createElement(TextField,toList(delay((()=>append(Object.entries(e),delay((()=>append(singleton(["value",s.MyText]),delay((()=>append(singleton(["onChange",e=>{i(new Msg(0,Browser_Types_Event__Event_get_Value(e)))}]),delay((()=>append(singleton(["fullWidth",!0]),delay((()=>singleton(["style",{width:300}])))))))))))))))))],["value",bind((e=>tryFind((t=>t.Id===e),s.Countries)),s.LastSelected)],["onChange",(e,t,r)=>{i(new Msg(1,t.Id))}]]),(r=ofArray(["Last selected: ",defaultArg(bind((e=>tryPick((t=>t.Id===e?t.Name:void 0),s.Countries)),s.LastSelected),"None")]),MuiHelpers_createElement(Typography,[["children",Interop_reactApi.Children.toArray(Array.from(r))]]))]);return createElement("div",{children:Interop_reactApi.Children.toArray(Array.from(l))})}